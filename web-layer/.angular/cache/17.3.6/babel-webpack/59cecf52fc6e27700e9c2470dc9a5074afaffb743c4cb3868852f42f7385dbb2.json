{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nlet SearchService = class SearchService {\n  constructor(client) {\n    this.client = client;\n    this.path = \"api/search/\";\n  }\n  searchByConditionals(searchByConditionalsModel) {\n    let params = new HttpParams();\n    if (searchByConditionalsModel.bodyType !== null && searchByConditionalsModel.bodyType !== undefined) {\n      Object.keys(searchByConditionalsModel.bodyType).forEach(value => {\n        params = params.append(\"bodyType\", value);\n      });\n    }\n    if (searchByConditionalsModel.color !== null && searchByConditionalsModel.color !== undefined) {\n      Object.keys(searchByConditionalsModel.color).forEach(value => {\n        params = params.append(\"color\", value);\n      });\n    }\n    if (searchByConditionalsModel.engine !== null && searchByConditionalsModel.engine !== undefined) {\n      Object.keys(searchByConditionalsModel.engine).forEach(value => {\n        params = params.append(\"engine\", value);\n      });\n    }\n    if (searchByConditionalsModel.porscheCenter !== null && searchByConditionalsModel.porscheCenter !== undefined) {\n      Object.keys(searchByConditionalsModel.porscheCenter).forEach(value => {\n        params = params.append(\"porscheCenter\", value);\n      });\n    }\n    if (searchByConditionalsModel.minPrice != null) params = params.append(\"minPrice\", searchByConditionalsModel.minPrice);\n    if (searchByConditionalsModel.maxPrice != null) params = params.append(\"maxPrice\", searchByConditionalsModel.maxPrice);\n    if (searchByConditionalsModel.minYearOfRelease != null) params = params.append(\"minYearOfRelease\", searchByConditionalsModel.minYearOfRelease);\n    if (searchByConditionalsModel.maxYearOfRelease != null) params = params.append(\"MaxYearOfRelease\", searchByConditionalsModel.maxYearOfRelease);\n    if (searchByConditionalsModel.model != null) params = params.append(\"model\", searchByConditionalsModel.model);\n    return this.client.get(this.path + 'conditionals', {\n      params\n    });\n  }\n  searchByModel(searchParams) {\n    let params = new HttpParams();\n    if (searchParams != null) params = params.append(\"searchQuery\", searchParams);\n    return this.client.get(this.path + 'model', {\n      params\n    });\n  }\n  searchByIdenitity(searchParams) {\n    let params = new HttpParams();\n    if (searchParams != null) params = params.append(\"searchQuery\", searchParams);\n    return this.client.get(this.path + 'identity', {\n      params\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nSearchService = __decorate([Injectable({\n  providedIn: \"root\"\n})], SearchService);\nexport { SearchService };","map":{"version":3,"names":["HttpClient","HttpParams","Injectable","SearchService","constructor","client","path","searchByConditionals","searchByConditionalsModel","params","bodyType","undefined","Object","keys","forEach","value","append","color","engine","porscheCenter","minPrice","maxPrice","minYearOfRelease","maxYearOfRelease","model","get","searchByModel","searchParams","searchByIdenitity","_","__decorate","providedIn"],"sources":["/home/maksi/Studying/Porsche/web-layer/src/services/seearcService.ts"],"sourcesContent":["import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { CarModel } from \"../models/CarModel\";\nimport { SearchByConditionalsModel } from \"../models/searchByConditionalsModel\";\n\n@Injectable({ providedIn: \"root\" })\nexport class SearchService {\n    constructor(private client: HttpClient) {\n\n    }\n\n\n    private path: string = \"api/search/\";\n\n\n    searchByConditionals(searchByConditionalsModel: SearchByConditionalsModel): Observable<CarModel[]> {\n        let params = new HttpParams();\n\n        if (searchByConditionalsModel.bodyType !== null && searchByConditionalsModel.bodyType !== undefined) {\n            Object.keys(searchByConditionalsModel.bodyType).forEach(value => {\n                params = params.append(\"bodyType\", value);\n            });\n        }\n\n        if (searchByConditionalsModel.color !== null && searchByConditionalsModel.color !== undefined) {\n            Object.keys(searchByConditionalsModel.color).forEach(value => {\n                params = params.append(\"color\", value);\n            });\n        }\n\n\n        if (searchByConditionalsModel.engine !== null && searchByConditionalsModel.engine !== undefined) {\n            Object.keys(searchByConditionalsModel.engine).forEach(value => {\n                params = params.append(\"engine\", value);\n            });\n        }\n\n        if (searchByConditionalsModel.porscheCenter !== null && searchByConditionalsModel.porscheCenter !== undefined) {\n            Object.keys(searchByConditionalsModel.porscheCenter).forEach(value => {\n                params = params.append(\"porscheCenter\", value);\n            });\n        }\n        \n        if (searchByConditionalsModel.minPrice != null)\n            params = params.append(\"minPrice\", searchByConditionalsModel.minPrice);\n        if (searchByConditionalsModel.maxPrice != null)\n            params = params.append(\"maxPrice\", searchByConditionalsModel.maxPrice);\n        if (searchByConditionalsModel.minYearOfRelease != null)\n            params = params.append(\"minYearOfRelease\", searchByConditionalsModel.minYearOfRelease);\n        if (searchByConditionalsModel.maxYearOfRelease != null)\n            params = params.append(\"MaxYearOfRelease\", searchByConditionalsModel.maxYearOfRelease);\n        if (searchByConditionalsModel.model != null)\n            params = params.append(\"model\", searchByConditionalsModel.model);\n\n        return this.client.get<any>(this.path + 'conditionals', { params })\n    }\n\n    searchByModel(searchParams: string): Observable<any> {\n        let params = new HttpParams();\n        if (searchParams != null)\n            params = params.append(\"searchQuery\", searchParams);\n        return this.client.get<any>(this.path + 'model', { params })\n    }\n\n    searchByIdenitity(searchParams: string): Observable<any> {\n        let params = new HttpParams();\n        if (searchParams != null)\n            params = params.append(\"searchQuery\", searchParams);\n        return this.client.get<any>(this.path + 'identity', { params })\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}