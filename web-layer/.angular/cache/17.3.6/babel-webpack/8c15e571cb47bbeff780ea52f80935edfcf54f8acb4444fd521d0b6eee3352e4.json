{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./admin-centers.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./admin-centers.component.scss?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { PorscheCenterService } from '../../../services/PorscheCenterService';\nimport { ImgSanitizerService } from '../../../services/imgSanitizerService';\nlet AdminCentersComponent = class AdminCentersComponent {\n  constructor(centerService, sanitizer) {\n    this.centerService = centerService;\n    this.sanitizer = sanitizer;\n    this.centers = [];\n    this.errorMessage = '';\n  }\n  sanitizeImg(img) {\n    console.log(img);\n    return this.sanitizer.sanitizeImg(img);\n  }\n  delete(id) {\n    this.centerService.delete(id).subscribe(() => {\n      this.centerService.getAll().subscribe(data => {\n        this.centers = data;\n      }, errorResponse => this.errorMessage = errorResponse.error);\n    }, errorResponse => this.errorMessage = errorResponse.error);\n  }\n  ngOnInit() {\n    this.centerService.getAll().subscribe(data => {\n      this.centers = data;\n    }, errorResponse => {\n      this.errorMessage = errorResponse.error;\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: PorscheCenterService\n  }, {\n    type: ImgSanitizerService\n  }];\n};\nAdminCentersComponent = __decorate([Component({\n  selector: 'app-admin-centers',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AdminCentersComponent);\nexport { AdminCentersComponent };","map":{"version":3,"names":["CommonModule","Component","RouterModule","PorscheCenterService","ImgSanitizerService","AdminCentersComponent","constructor","centerService","sanitizer","centers","errorMessage","sanitizeImg","img","console","log","delete","id","subscribe","getAll","data","errorResponse","error","ngOnInit","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["/home/maksi/Studying/Porsche/web-layer/src/app/admin/admin-centers/admin-centers.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { PorscheCenterService } from '../../../services/PorscheCenterService';\nimport { PorscheCenterModel } from '../../../models/CenterModel';\nimport { ImgSanitizerService } from '../../../services/imgSanitizerService';\nimport { SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-admin-centers',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './admin-centers.component.html',\n  styleUrl: './admin-centers.component.scss'\n})\nexport class AdminCentersComponent implements OnInit {\n  constructor(private centerService: PorscheCenterService,\n    private sanitizer: ImgSanitizerService\n  ) { }\n\n  centers: PorscheCenterModel[] = [];\n  errorMessage = '';\n\n  sanitizeImg(img: string): SafeUrl {\n    console.log(img);\n    return this.sanitizer.sanitizeImg(img);\n  }\n\n  delete(id: string) {\n    this.centerService.delete(id).subscribe(() => {\n      this.centerService.getAll().subscribe(data => {\n        this.centers = data;\n      },\n        errorResponse => this.errorMessage = errorResponse.error)\n    },\n      errorResponse => this.errorMessage = errorResponse.error)\n  }\n\n  ngOnInit(): void {\n    this.centerService.getAll().subscribe(data => {\n      this.centers = data;\n  \n    },\n      errorResponse => {\n        this.errorMessage = errorResponse.error;\n      })\n  }\n}\n"],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,oBAAoB,QAAQ,wCAAwC;AAE7E,SAASC,mBAAmB,QAAQ,uCAAuC;AAUpE,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAChCC,YAAoBC,aAAmC,EAC7CC,SAA8B;IADpB,KAAAD,aAAa,GAAbA,aAAa;IACvB,KAAAC,SAAS,GAATA,SAAS;IAGnB,KAAAC,OAAO,GAAyB,EAAE;IAClC,KAAAC,YAAY,GAAG,EAAE;EAHb;EAKJC,WAAWA,CAACC,GAAW;IACrBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAO,IAAI,CAACJ,SAAS,CAACG,WAAW,CAACC,GAAG,CAAC;EACxC;EAEAG,MAAMA,CAACC,EAAU;IACf,IAAI,CAACT,aAAa,CAACQ,MAAM,CAACC,EAAE,CAAC,CAACC,SAAS,CAAC,MAAK;MAC3C,IAAI,CAACV,aAAa,CAACW,MAAM,EAAE,CAACD,SAAS,CAACE,IAAI,IAAG;QAC3C,IAAI,CAACV,OAAO,GAAGU,IAAI;MACrB,CAAC,EACCC,aAAa,IAAI,IAAI,CAACV,YAAY,GAAGU,aAAa,CAACC,KAAK,CAAC;IAC7D,CAAC,EACCD,aAAa,IAAI,IAAI,CAACV,YAAY,GAAGU,aAAa,CAACC,KAAK,CAAC;EAC7D;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACf,aAAa,CAACW,MAAM,EAAE,CAACD,SAAS,CAACE,IAAI,IAAG;MAC3C,IAAI,CAACV,OAAO,GAAGU,IAAI;IAErB,CAAC,EACCC,aAAa,IAAG;MACd,IAAI,CAACV,YAAY,GAAGU,aAAa,CAACC,KAAK;IACzC,CAAC,CAAC;EACN;EAAC,QAAAE,CAAA,G;;;;;;AA/BUlB,qBAAqB,GAAAmB,UAAA,EAPjCvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,mBAAmB;EAC7BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC3B,YAAY,EAAEE,YAAY,CAAC;EACrC0B,QAAA,EAAAC,oBAA6C;;CAE9C,CAAC,C,EACWxB,qBAAqB,CAgCjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}