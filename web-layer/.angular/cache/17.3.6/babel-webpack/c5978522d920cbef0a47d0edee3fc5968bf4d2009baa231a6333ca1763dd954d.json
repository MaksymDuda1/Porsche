{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./create-car.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./create-car.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { CarService } from '../../../../services/carService';\nimport { CreateCarModel } from '../../../../models/createCarModel';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BodyType } from '../../../../enums/BodyType';\nimport { Color } from '../../../../enums/Color';\nimport { RouterModule } from '@angular/router';\nimport { PorscheCenterService } from '../../../../services/PorscheCenterService';\nimport { ImgSanitizerService } from '../../../../services/imgSanitizerService';\nlet CreateCarComponent = class CreateCarComponent {\n  constructor(carService, porscheCenterService, sanitizer) {\n    this.carService = carService;\n    this.porscheCenterService = porscheCenterService;\n    this.sanitizer = sanitizer;\n    this.porscheCenterModels = [];\n    this.bodyTypes = Object.values(BodyType);\n    this.colors = Object.values(Color);\n    this.colorsValues = this.colors.filter(item => typeof item === 'string');\n    this.bodyTypesValues = this.bodyTypes.filter(item => typeof item === 'string');\n    this.years = [];\n    this.createCarModel = new CreateCarModel();\n    this.message = '';\n    this.photos = [];\n  }\n  seedYears() {\n    const currentYear = new Date().getFullYear();\n    const startYear = currentYear - 50;\n    for (let year = currentYear; year >= startYear; year--) {\n      this.years.push(year);\n    }\n  }\n  sanitizeImg(img) {\n    return this.sanitizer.sanitizeImg(img);\n  }\n  onCreate() {\n    const formData = new FormData();\n    formData.append(\"IdentityCode\", this.createCarModel.identityCode);\n    formData.append(\"Model\", this.createCarModel.model);\n    formData.append(\"BodyType\", this.createCarModel.bodyType.toString());\n    formData.append(\"Color\", this.createCarModel.color.toString());\n    formData.append(\"Engine\", this.createCarModel.engine);\n    formData.append(\"FuelConsumption\", this.createCarModel.fuelConsumption.toString());\n    formData.append(\"YearOfEdition\", this.createCarModel.yearOfEdition.toString());\n    formData.append(\"PorscheCenterId\", this.createCarModel.porscheCenterId.toString());\n    formData.append(\"Price\", this.createCarModel.price.toString());\n    for (const photo of this.photos) {\n      formData.append(\"Photos\", photo);\n    }\n    this.carService.createCar(formData).subscribe(() => {\n      this.message = \"Car created successfully\";\n    }, errorResponse => this.message = errorResponse.error);\n  }\n  ngOnInit() {\n    this.porscheCenterService.getAll().subscribe(data => {\n      this.porscheCenterModels = data;\n      this.seedYears();\n    }, errorResponse => this.message = errorResponse.error);\n  }\n  onFileChange(event) {\n    this.photos = event.target.files;\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: CarService\n  }, {\n    type: PorscheCenterService\n  }, {\n    type: ImgSanitizerService\n  }];\n};\nCreateCarComponent = __decorate([Component({\n  selector: 'app-create-car',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], CreateCarComponent);\nexport { CreateCarComponent };","map":{"version":3,"names":["Component","CarService","CreateCarModel","CommonModule","FormsModule","BodyType","Color","RouterModule","PorscheCenterService","ImgSanitizerService","CreateCarComponent","constructor","carService","porscheCenterService","sanitizer","porscheCenterModels","bodyTypes","Object","values","colors","colorsValues","filter","item","bodyTypesValues","years","createCarModel","message","photos","seedYears","currentYear","Date","getFullYear","startYear","year","push","sanitizeImg","img","onCreate","formData","FormData","append","identityCode","model","bodyType","toString","color","engine","fuelConsumption","yearOfEdition","porscheCenterId","price","photo","createCar","subscribe","errorResponse","error","ngOnInit","getAll","data","onFileChange","event","target","files","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["/home/maksi/Studying/Porsche/web-layer/src/app/admin/admin-cars/create-car/create-car.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CarService } from '../../../../services/carService';\nimport { CreateCarModel } from '../../../../models/createCarModel';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BodyType } from '../../../../enums/BodyType';\nimport { Color } from '../../../../enums/Color';\nimport { RouterModule } from '@angular/router';\nimport { PorscheCenterCreateModel } from '../../../../models/porscheCenterCreateModel';\nimport { PorscheCenterService } from '../../../../services/PorscheCenterService';\nimport { PorscheCenterModel } from '../../../../models/CenterModel';\nimport { ImgSanitizerService } from '../../../../services/imgSanitizerService';\nimport { SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-create-car',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule],\n  templateUrl: './create-car.component.html',\n  styleUrls: ['./create-car.component.scss']\n})\nexport class CreateCarComponent implements OnInit {\n  constructor(\n    private carService: CarService,\n    private porscheCenterService: PorscheCenterService,\n    private sanitizer: ImgSanitizerService\n  ) { }\n\n  porscheCenterModels: PorscheCenterModel[] = [];\n  bodyTypes = Object.values(BodyType);\n  colors = Object.values(Color);\n  colorsValues =  this.colors.filter(item => typeof item === 'string');\n  bodyTypesValues =  this.bodyTypes.filter(item => typeof item === 'string');\n  years: number[] = [];\n  createCarModel = new CreateCarModel();\n  message = '';\n  photos: File[] = [];\n\n  seedYears() {\n    const currentYear = new Date().getFullYear();\n    const startYear = currentYear - 50; \n\n    for (let year = currentYear; year >= startYear; year--) {\n      this.years.push(year);\n    }\n  }\n\n  sanitizeImg(img: string): SafeUrl {\n    return this.sanitizer.sanitizeImg(img);\n  }\n\n  onCreate() {\n    const formData = new FormData();\n    formData.append(\"IdentityCode\", this.createCarModel.identityCode);\n    formData.append(\"Model\", this.createCarModel.model);\n    formData.append(\"BodyType\", this.createCarModel.bodyType.toString());\n    formData.append(\"Color\", this.createCarModel.color.toString());\n    formData.append(\"Engine\", this.createCarModel.engine);\n    formData.append(\"FuelConsumption\", this.createCarModel.fuelConsumption.toString());\n    formData.append(\"YearOfEdition\", this.createCarModel.yearOfEdition.toString());\n    formData.append(\"PorscheCenterId\", this.createCarModel.porscheCenterId.toString());\n    formData.append(\"Price\", this.createCarModel.price.toString());\n\n    for (const photo of this.photos) {\n      formData.append(\"Photos\", photo);\n    }\n\n    this.carService.createCar(formData).subscribe(\n      () => {\n        this.message = \"Car created successfully\";\n      },\n      errorResponse => this.message = errorResponse.error\n    );\n  }\n\n  ngOnInit(): void {\n    this.porscheCenterService.getAll().subscribe(\n      data => {\n        this.porscheCenterModels = data;\n        this.seedYears();\n      },\n      errorResponse => this.message = errorResponse.error\n    );\n  }\n\n  onFileChange(event: any) {\n    this.photos = event.target.files;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}