{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nlet UserService = class UserService {\n  constructor(client) {\n    this.client = client;\n    this.path = \"api/users/\";\n  }\n  getAll() {\n    return this.client.get(this.path);\n  }\n  getById(id) {\n    return this.client.get(this.path + id);\n  }\n  delete(id) {\n    return this.client.delete(this.path + id);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nUserService = __decorate([Injectable({\n  providedIn: \"root\"\n})], UserService);\nexport { UserService };","map":{"version":3,"names":["HttpClient","Injectable","UserService","constructor","client","path","getAll","get","getById","id","delete","_","__decorate","providedIn"],"sources":["/home/maksi/Studying/Porsche/web-layer/src/services/userService.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({ providedIn: \"root\" })\nexport class UserService {\n    constructor(private client: HttpClient) {\n\n    }\n\n    private path: string = \"api/users/\";\n\n    getAll(): Observable<any> {\n        return this.client.get<any>(this.path);\n    }\n\n    getById(id: string): Observable<any> {\n        return this.client.get<any>(this.path + id);\n    }\n    delete(id: string): Observable<any> {\n        return this.client.delete(this.path + id);\n    }\n\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,UAAU,QAAQ,eAAe;AAInC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EACpBC,YAAoBC,MAAkB;IAAlB,KAAAA,MAAM,GAANA,MAAM;IAIlB,KAAAC,IAAI,GAAW,YAAY;EAFnC;EAIAC,MAAMA,CAAA;IACF,OAAO,IAAI,CAACF,MAAM,CAACG,GAAG,CAAM,IAAI,CAACF,IAAI,CAAC;EAC1C;EAEAG,OAAOA,CAACC,EAAU;IACd,OAAO,IAAI,CAACL,MAAM,CAACG,GAAG,CAAM,IAAI,CAACF,IAAI,GAAGI,EAAE,CAAC;EAC/C;EACAC,MAAMA,CAACD,EAAU;IACb,OAAO,IAAI,CAACL,MAAM,CAACM,MAAM,CAAC,IAAI,CAACL,IAAI,GAAGI,EAAE,CAAC;EAC7C;EAAC,QAAAE,CAAA,G;;;;AAhBQT,WAAW,GAAAU,UAAA,EADvBX,UAAU,CAAC;EAAEY,UAAU,EAAE;AAAM,CAAE,CAAC,C,EACtBX,WAAW,CAkBvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}